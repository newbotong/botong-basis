### 设置服务端口和Tomcat编码格式
server:
  port: 8000
  tomcat:
    uri-encoding: UTF-8
    max-threads: 128 # 最大worker线程
    min-spare-threads: 64 # 最小worker线程
  undertow:
    io-threads: 8 # IO线程数，默认为CPU核心数，最小为2
    worker-threads: 40 # 阻塞任务线程池，值设置取决于系统的负载，默认为io-threads * 8
    buffer-size: 512 # 每块buffer的空间大小
    buffers-per-region: 10 # 每个区分配的buffer数量
    direct-buffers: true # 是否分配的直接内存

### 设置服务名称
spring:
  application:
    name: botong-zuul
  rabbitmq:
      host: ${rabbitmq.server}
      port: ${rabbitmq.port}
      username: ${rabbitmq.username}
      password: ${rabbitmq.password}
  cloud:
    config:
      fail-fast: true
      discovery:
        enabled: true
        service-id: botong-config
      profile: dev
      label: master
  # Redis数据库索引（默认为0）
  redis:
    database: ${redis.dbindex}
    # Redis服务器地址
    host: ${redis.host}
    # Redis服务器连接端口
    port: ${redis.port}
    # Redis服务器连接密码（默认为空）
    password: ${redis.password}
    # 连接超时时间（毫秒）
    timeout: 0
    # 连接池最大连接数（使用负值表示没有限制）
    pool:
      max-active: 8
      # 连接池最大阻塞等待时间（使用负值表示没有限制）
      max-wait: -1
      # 连接池中的最大空闲连接
      max-idle: 8
      # 连接池中的最小空闲连接
      min-idle: 0
      ## 配置配置中心服务
  redis-readonly:
      enabled: true
      database: ${redis-readonly.dbindex}
      # Redis服务器地址
      host: ${redis-readonly.host}
      # Redis服务器连接端口
      port: ${redis-readonly.port}
      # Redis服务器连接密码（默认为空）
      password: ${redis-readonly.password}
      # 连接超时时间（毫秒）
      timeout: 0
      # 连接池最大连接数（使用负值表示没有限制）
      pool:
        max-active: 8
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1
        # 连接池中的最大空闲连接
        max-idle: 8
        # 连接池中的最小空闲连接
        min-idle: 0
        ## 配置配置中心服务

##配置路由忽略服务和是否重试；并利配置链接超时时间
zuul:
  ignoredServices: '*'
  retryable: true
  SendErrorFilter:
    error:
      disable: true
  host:
      connect-timeout-millis: 30000
      socket-timeout-millis: 60000
      max-total-connections: 500 # 每个服务的http客户端连接池最大连接，默认值是200
      max-per-route-connections: 50 # 每个route可用的最大连接数，默认值是20
  routes:
    auth-server:
      path: /auth-server/**
      serviceId: botong-auth-server
    admin:
      path: /admin/**
      serviceId: botong-admin
    microapps:
      path: /microapps/**
      serviceId: botong-micro-apps
    appcenter:
      path: /app-center/**
      serviceId: botong-app-center
    passport:
      path: /passport/**
      serviceId: botong-passport-domain
    org:
      path: /org/**
      serviceId: botong-org-structure
    im:
      path: /im/**
      serviceId: botong-im
    dang:
      path: /dang/**
      serviceId: botong-dang
    thirdparty:
      path: /third-party/**
      serviceId: botong-third-party
    contacts:
      path: /contacts/**
      serviceId: botong-contacts
    favourite:
      path: /favourite/**
      serviceId: botong-favourite
    comment:
      path: /comment/**
      serviceId: botong-comment
    system:
      path: /system/**
      serviceId: botong-system
    org-admin:
      path: /org-admin/**
      serviceId: botong-org-admin-domain
    org-book:
      path: /org-book/**
      serviceId: botong-book

  prefix: /api
  ribbon-isolation-strategy: THREAD # 可选：SEMAPHORE THREAD
  #限流配置
  ratelimit:
      key-prefix: botong
      enabled: true
      repository: REDIS
      behind-proxy: true
      default-policy: #optional - will apply unless specific policy exists
          limit: 100 #optional - 每个刷新时间窗口对应的请求数量限制
          refresh-interval: 30 # 刷新时间窗口的时间，默认值 (秒)
          type:
           - origin

##配置注册中心
eureka:
  client:
    serviceUrl:
      defaultZone: http://${eureka.server}:${eureka.port}/eureka/
  instance:
    preferIpAddress: true

hystrix:
  threadpool:
    default:
      ##并发执行的最大线程数，默认10
      coreSize: 1000
      ##BlockingQueue的最大队列数
      maxQueueSize: 1000
      ##即使maxQueueSize没有达到，达到queueSizeRejectionThreshold该值后，请求也会被拒绝
      queueSizeRejectionThreshold: 500
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 50000
          strategy: SEMAPHORE

ribbon:
  ReadTimeout: 60000
  ConnectTimeout: 60000

# 写入文件日志
logging:
  file: ${user.dir}/logs/${spring.application.name}.log
  level:
    com.yunjing.zuul.permission.processor.feign: debug
gate:
  enabled: true
  ignore:
    uri: /admin/admin-user/login,/passport/user/login-code,/passport/user/send-login-code,/passport/user/login-pwd,/auth-server/auth/refresh-token,/app-center/app/create,/passport/web/user/login-pwd
    startWith: /microapps,/static